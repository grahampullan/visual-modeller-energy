{"version":3,"file":"visual-modeller-energy.min.js","sources":["../node_modules/visual-modeller-core/build/visual-modeller-core.js","../src/EnergyNode.js","../src/ControllerNode.js","../src/GridExportNode.js","../src/GridSupplyNode.js","../src/EnergyLink.js","../src/LoadNode.js","../src/EnergyModel.js","../src/SolarPVNode.js"],"sourcesContent":["class Model {\n    constructor(options) {\n        this.nodes = options.nodes || [];\n        this.links = options.links || [];\n        this.logs = options.logs || [];\n        this.maxNodeId = 0;\n        this.maxLinkId = 0;\n        this.maxLogId = 0;\n    }\n\n    getNodeId() {\n        let newNodeId = `node-${this.maxNodeId}`;\n        this.maxNodeId++;\n        return newNodeId;\n    }\n\n    getLinkId() {\n        let newLinkId = `link-${this.maxLinkId}`;\n        this.maxLinkId++;\n        return newLinkId;\n    }\n\n    addNode(node) {\n        node.id = this.getNodeId();\n        this.nodes.push(node);\n    }\n\n    addLink(link) {\n        link.id = this.getLinkId();\n        this.links.push(link);\n    }\n\n    addLog(log) {\n        log.id = this.getLogId();\n        this.logs.push(log);\n    }\n\n    removeNode(node) {\n        this.nodes = this.nodes.filter(n => n !== node);\n    }\n\n    removeLink(link) {\n        this.links = this.links.filter(l => l !== link);\n    }\n\n    removeLog(log) {\n        this.logs = this.logs.filter(l => l !== log);\n    }\n\n    removeNodeById(id) {\n        this.nodes = this.nodes.filter(n => n.id !== id);\n    }\n\n    removeLinkById(id) {\n        this.links = this.links.filter(l => l.id !== id);\n    }\n\n    removeLogById(id) {\n        this.logs = this.logs.filter(l => l.id !== id);\n    }\n}\n\nclass Node {\n    constructor(options) {\n        this.name = options.name || 'node';\n        this.sockets = [];\n        this.state = options.state || {};\n        this.maxSocketId = 0;\n        if (options.sockets) {\n            options.sockets.forEach(socket => {\n                this.addSocket(socket);\n            });\n        }\n    }\n\n    getSocketId() {\n        let newSocketId = this.maxSocketId;\n        this.maxSocketId++;\n        return newSocketId;\n    }\n\n    get leftSockets() {\n        return this.sockets.filter(s => s.position === 'left');\n    }\n\n    get rightSockets() {\n        return this.sockets.filter(s => s.position === 'right');\n    }\n\n    get topSockets() {\n        return this.sockets.filter(s => s.position === 'top');\n    }\n\n    get bottomSockets() {\n        return this.sockets.filter(s => s.position === 'bottom');\n    }\n    \n    addSocket(socket) {\n        socket.id = this.getSocketId();\n        this.sockets.push(socket);\n    }\n\n    setSocketByIndex(index, socket) {\n        socket.id = this.getSocketId();\n        this.sockets[index] = socket;\n    }\n\n    getSocketByIndex(index) {\n        return this.sockets[index];\n    }   \n\n    removeSocket(socket) {\n        this.sockets = this.sockets.filter(s => s !== socket);\n    }\n\n    removeSocketById(id) {\n        this.sockets = this.sockets.filter(s => s.id !== id);\n    }\n\n    removeSocketByIndex(index) {\n        this.sockets = this.sockets.filter((s, i) => i !== index);\n    }\n\n}\n\nclass Socket {\n    constructor(options) {\n        this.name = options.name || 'socket';\n        this.state = options.state || {};\n        this.linkId = options.linkId || '';\n        this.position = options.position || 'left';  \n    }\n}\n\nclass Link {\n    constructor(options) {\n        this.socket1 = options.socket1 || null;\n        this.socket2 = options.socket2 || null;\n        this.state = options.state || {};\n    }\n}\n\nclass Log {\n    constructor(options) {\n        this.name = options.name || 'log';\n        this.target = options.target || null;\n        this.values = [];\n    }\n\n    addToLog() {\n        this.values.push(this.target);\n    }\n}\n\nexport { Link, Log, Model, Node, Socket };\n","import { Node } from 'visual-modeller-core';\n\nclass EnergyNode extends Node {\n    constructor(options) {\n        super(options);\n    }\n\n    setConstraints(){\n        return;\n    }\n    \n    updateState(){\n        return;\n    }\n}\n\n\nexport { EnergyNode };","import { EnergyNode } from \"./EnergyNode\";\n\nclass ControllerNode extends EnergyNode {\n    constructor(options) {\n        super(options);\n        this.class = 'controlNode';\n        this.type = 'controller';\n        this.inputSocketOrder = options.inputSocketOrder || [];\n        this.outputSocketOrder = options.outputSocketOrder || [];\n    }\n\n}\n\nexport { ControllerNode };","import { EnergyNode } from \"./EnergyNode\";\nimport { Socket } from 'visual-modeller-core';\n\nclass GridExportNode extends EnergyNode {\n    constructor(options) {\n        super(options);\n        this.class = 'endNode';\n        this.type = 'gridExport';\n        const socketOptions = {};\n        socketOptions.name = options.name || 'Grid Export';\n        socketOptions.linkId = options.linkId || '';\n        socketOptions.position = options.position || 'left';\n        socketOptions.state = options.state || {max: Infinity, value:null, constraint: false};\n        this.setSocketByIndex(0, new Socket(socketOptions));\n    }\n}\n\nexport { GridExportNode };","import { EnergyNode } from \"./EnergyNode\";\nimport { Socket } from 'visual-modeller-core';\n\nclass GridSupplyNode extends EnergyNode {\n    constructor(options) {\n        super(options);\n        this.class = 'endNode';\n        this.type = 'gridSupply';\n        const socketOptions = {};\n        socketOptions.name = options.name || 'Grid Supply';\n        socketOptions.linkId = options.linkId || '';\n        socketOptions.position = options.position || 'right'; // output on right side\n        socketOptions.state = options.state || {max: Infinity, value:null, constraint: false};\n        console.log(this);\n        this.setSocketByIndex(0, new Socket(socketOptions)); // endNode so only one socket\n    }\n}\n\nexport { GridSupplyNode };","import { Link } from 'visual-modeller-core';\n\nclass EnergyLink extends Link {\n    constructor(options) {\n        super(options);\n    }\n\n    setFlux() {\n        const socket1 = this.socket1;\n        const state1 = socket1.state;\n        const socket2 = this.socket2;\n        const state2 = socket2.state;\n\n        if (state1.constraint) {\n            if (state2.constraint) {\n                console.log('problem - both sockets have constraints', this);\n            } else {\n                if (state1.value <= state2.max) {\n                    this.state.value = state1.value;\n                }\n            }\n        }\n\n        if (state2.constraint) {\n            if (state1.constraint) {\n                console.log('problem - both sockets have constraints', this);\n            } else {\n                if (state2.value <= state1.max) {\n                    this.state.value = state2.value;\n                }\n            }\n        }\n\n    }\n\n}\n\nexport { EnergyLink };","import { EnergyNode } from \"./EnergyNode\";\nimport { Socket } from 'visual-modeller-core';\n\nclass LoadNode extends EnergyNode {\n    constructor(options) {\n        super(options);\n        this.class = 'endNode';\n        this.type = 'loadNode';\n        const socketOptions = {};\n        socketOptions.name = options.name || 'Load';\n        socketOptions.linkId = options.linkId || '';\n        socketOptions.position = options.position || 'left'; // input on left side\n        socketOptions.state = options.state || {max: null, value:null, constraint: true, timeVarying: false, timeSeries: null};\n        this.setSocketByIndex(0, new Socket(socketOptions)); // endNode so only one socket\n    }\n\n    setConstraints(data) {\n        const timeStep = data.timeStep;\n        const state = this.getSocketByIndex(0).state;\n        if (!state.constraint) {\n            return;\n        }\n        if (state.timeVarying) {\n            state.value = state.timeSeries[timeStep];\n        } \n    }\n\n}\n\nexport { LoadNode };","import { Model } from 'visual-modeller-core';\n\nclass EnergyModel extends Model {\n    constructor(options) {\n        super(options);\n        this.timeVarying = options.timeVarying || false;\n        this.timeSteps = options.timeSteps || 1;\n        this.timeStep = 0;\n    }\n\n    run() {\n        const nodes = this.nodes;\n        const links = this.links;\n        const logs = this.logs;\n        const timeVarying = this.timeVarying;\n        const timeSteps = this.timeSteps;\n        if (!timeVarying) {\n            this.timeSteps = 1;\n        }\n\n        for (let i = 0; i < timeSteps; i++) {\n            this.timeStep = i;\n            // solution process:\n            //     allNodes - set fixed fluxes and flux limits - e.g. constrained fluxes\n            //     socket.state.fluxTarget is set\n\n            nodes.forEach(node => node.setConstraints({timeStep:i})); // needs to know time step\n\n            //     allControllerNodes - set flux targets on sockets\n\n            nodes.filter(node => node.type === 'controller').forEach(controllerNode => controllerNode.setFluxTargets());\n\n            //     allLinks - set fluxes using targets\n\n            links.forEach(link => link.setFlux());\n\n            //     allNodes - update state given current fluxes (e.g. battery)\n\n            nodes.forEach(node => node.updateState());\n\n            //    finally update logs\n            //    logs is array of objects {\"name\", [values]}\n\n            logs.forEach( log => log.writeToLog());\n            \n        }\n\n    }\n}\n\nexport { EnergyModel };\n\n\n\n","import { EnergyNode } from \"./EnergyNode\";\nimport { Socket } from 'visual-modeller-core';\n\nclass SolarPVNode extends EnergyNode {\n    constructor(options) {\n        super(options);\n        this.class = 'endNode';\n        this.type = 'solarPVNode';\n        const socketOptions = {};\n        socketOptions.name = options.name || 'Solar PV';\n        socketOptions.linkId = options.linkId || '';\n        socketOptions.position = options.position || 'right'; // output on right side\n        socketOptions.state = options.state || {max: null, value:null, constraint: true, timeVarying: false, timeSeries: null};\n        this.setSocketByIndex(0, new Socket(socketOptions)); // endNode so only one socket\n    }\n\n    setConstraints(data) {\n        const timeStep = data.timeStep;\n        const state = this.getSocketByIndex(0).state;\n        if (!state.constraint) {\n            return;\n        }\n        if (state.timeVarying) {\n            state.value = state.timeSeries[timeStep];\n        } \n    }\n\n}\n\nexport { SolarPVNode };"],"names":["Model","constructor","options","this","nodes","links","logs","maxNodeId","maxLinkId","maxLogId","getNodeId","newNodeId","getLinkId","newLinkId","addNode","node","id","push","addLink","link","addLog","log","getLogId","removeNode","filter","n","removeLink","l","removeLog","removeNodeById","removeLinkById","removeLogById","Node","name","sockets","state","maxSocketId","forEach","socket","addSocket","getSocketId","newSocketId","leftSockets","s","position","rightSockets","topSockets","bottomSockets","setSocketByIndex","index","getSocketByIndex","removeSocket","removeSocketById","removeSocketByIndex","i","Socket","linkId","Link","socket1","socket2","EnergyNode","super","setConstraints","updateState","class","type","inputSocketOrder","outputSocketOrder","socketOptions","max","Infinity","value","constraint","console","setFlux","state1","state2","timeVarying","timeSeries","data","timeStep","target","values","addToLog","timeSteps","run","controllerNode","setFluxTargets","writeToLog"],"mappings":"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","x_google_ignoreList":[0]}